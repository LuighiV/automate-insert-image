<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExecutionCompletedDefaultMessage" xml:space="preserve">
    <value>Execution ended in all selected files.</value>
  </data>
  <data name="ExecutionCompletedTitle" xml:space="preserve">
    <value>Execution completed</value>
  </data>
  <data name="ExecutionErrorTitle" xml:space="preserve">
    <value>Execution error</value>
  </data>
  <data name="HelpBottomLeft" xml:space="preserve">
    <value>Set the page reference to the bottom left corner of the selected page.</value>
  </data>
  <data name="HelpBottomRight" xml:space="preserve">
    <value>Set the page reference to the bottom right corner of the selected page.</value>
  </data>
  <data name="HelpCurrentUnit" xml:space="preserve">
    <value>Current unit for Width, Height, LeftOffset and BottomOffset. If changed, all values are updated to its equivalence.</value>
  </data>
  <data name="HelpGenerate" xml:space="preserve">
    <value>Click to insert the image in selected files and save resulting documents as PDFs.</value>
  </data>
  <data name="HelpImageBottomOffset" xml:space="preserve">
    <value>Distance from the reference point to the bottom side of the image. Measured in the selected unit.</value>
  </data>
  <data name="HelpImageHeight" xml:space="preserve">
    <value>Current image height in the selected unit.</value>
  </data>
  <data name="HelpImageLeftOffset" xml:space="preserve">
    <value>Distance from the reference point to the left side of the image. Measured in the selected unit.</value>
  </data>
  <data name="HelpImagePreview" xml:space="preserve">
    <value>Image preview for current selected picture.</value>
  </data>
  <data name="HelpImageWidth" xml:space="preserve">
    <value>Current image width in the selected unit.</value>
  </data>
  <data name="HelpInputPath" xml:space="preserve">
    <value>Current input file/folder path. Click on "Explore" to select one.</value>
  </data>
  <data name="HelpInputPathExplore" xml:space="preserve">
    <value>Click to select the files/folder to be processed.</value>
  </data>
  <data name="HelpInputPathFiles" xml:space="preserve">
    <value>Set the input path as a list of files, separated by commas ","</value>
  </data>
  <data name="HelpInputPathFolder" xml:space="preserve">
    <value>Set the input path as a folder.</value>
  </data>
  <data name="HelpKeepAspectRatio" xml:space="preserve">
    <value>Mantain the aspect ratio for the image. If modify width, the height is modified accordingly.</value>
  </data>
  <data name="HelpPageNumber" xml:space="preserve">
    <value>Page number where the image is inserted.</value>
  </data>
  <data name="HelpPDFSelection" xml:space="preserve">
    <value>Select PDF as input document type.</value>
  </data>
  <data name="HelpPicturePath" xml:space="preserve">
    <value>Current picture path. Click on "Explore" to select one.</value>
  </data>
  <data name="HelpPicturePathExplore" xml:space="preserve">
    <value>Click to select the picture to be inserted in document(s).</value>
  </data>
  <data name="HelpPlaceHolder" xml:space="preserve">
    <value>Text to be searched in document and where the image will be placed.</value>
  </data>
  <data name="HelpRelativeToPage" xml:space="preserve">
    <value>Set the reference to the corners in the page. Only for PDF documents.</value>
  </data>
  <data name="HelpRelativeToText" xml:space="preserve">
    <value>Set the reference to a text placeholder in the document.</value>
  </data>
  <data name="HelpSameFolder" xml:space="preserve">
    <value>Save the PDF in the same folder as the original file. Only for Word documents.</value>
  </data>
  <data name="HelpSubFolder" xml:space="preserve">
    <value>Save the PDF in a subfolder relative to the directory of the current file.</value>
  </data>
  <data name="HelpSubFolderText" xml:space="preserve">
    <value>Set the subfolder name to save the generated PDF file.</value>
  </data>
  <data name="HelpTopLeft" xml:space="preserve">
    <value>Set the page reference to the top left corner of the selected page.</value>
  </data>
  <data name="HelpTopRight" xml:space="preserve">
    <value>Set the page reference to the top right corner of the selected page.</value>
  </data>
  <data name="HelpWordSelection" xml:space="preserve">
    <value>Select Word as input document type.</value>
  </data>
  <data name="InfoCloseWord" xml:space="preserve">
    <value>Closing MS Word in background</value>
  </data>
  <data name="InfoCounterFile" xml:space="preserve">
    <value>File {0} /{1}</value>
  </data>
  <data name="InfoCreateDirectorySuccess" xml:space="preserve">
    <value>The directory {0} was created sucessfully at {1}</value>
  </data>
  <data name="InfoFileName" xml:space="preserve">
    <value>Current file name: {0}</value>
  </data>
  <data name="InfoFinishFile" xml:space="preserve">
    <value>Finish processing file {0}</value>
  </data>
  <data name="InfoFinishProcessingFiles" xml:space="preserve">
    <value>Finish processing files.</value>
  </data>
  <data name="InfoFinishProgram" xml:space="preserve">
    <value>Finish program</value>
  </data>
  <data name="InfoNo" xml:space="preserve">
    <value>no</value>
  </data>
  <data name="InfoOpenWord" xml:space="preserve">
    <value>Starting MS Word in background</value>
  </data>
  <data name="InfoPageOutOfBounds" xml:space="preserve">
    <value>Page {0} is out of the document bounds. Image not inserted.</value>
  </data>
  <data name="InfoPlaceholder" xml:space="preserve">
    <value>Placeholder set to: {0}</value>
  </data>
  <data name="InfoSavedPDFFile" xml:space="preserve">
    <value>Saved PDF file: {0}</value>
  </data>
  <data name="InfoSaveWordDocument" xml:space="preserve">
    <value>Save word document: {0}</value>
  </data>
  <data name="InfoStartFile" xml:space="preserve">
    <value>Processsing file: {0}</value>
  </data>
  <data name="InfoStartProcessingFiles" xml:space="preserve">
    <value>Starting processing {0} files.</value>
  </data>
  <data name="InfoStartProgram" xml:space="preserve">
    <value>Starting program</value>
  </data>
  <data name="InfoStatusFileExplorerOpen" xml:space="preserve">
    <value>File explorer opened.</value>
  </data>
  <data name="InfoStatusFolderExplorerOpen" xml:space="preserve">
    <value>Folder explorer opened.</value>
  </data>
  <data name="InfoStatusNewDialogProcessing" xml:space="preserve">
    <value>The processing is executing in another dialog.</value>
  </data>
  <data name="InfoStatusProcessingFinished" xml:space="preserve">
    <value>The processing has finished.</value>
  </data>
  <data name="InfoStatusReady" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="InfoStatusStartProcessing" xml:space="preserve">
    <value>The processing has started.</value>
  </data>
  <data name="InfoStatusValidationError" xml:space="preserve">
    <value>Some validations were not successful. Please, check the blinking alerts and fix them.</value>
  </data>
  <data name="InfoSummarySuccess" xml:space="preserve">
    <value>Total documents with inserted image successfully: {0}/{1}</value>
  </data>
  <data name="InfoTextNotFound" xml:space="preserve">
    <value>Text "{0}" not found in document. Image not inserted.</value>
  </data>
  <data name="InfoYes" xml:space="preserve">
    <value>yes</value>
  </data>
  <data name="QuerySaveCurrentValues" xml:space="preserve">
    <value>Would you like to save the current settings?</value>
  </data>
  <data name="SaveCurrentValues" xml:space="preserve">
    <value>Save current settings</value>
  </data>
  <data name="TextValidationFilePath" xml:space="preserve">
    <value>It is required a valid file path.
Use the Explorer button to select one.</value>
  </data>
  <data name="TextValidationPicturePath" xml:space="preserve">
    <value>It is required a valid picture path.
Use the Explorer button to select one.</value>
  </data>
  <data name="TextValidationPlaceholder" xml:space="preserve">
    <value>It is required a non-empty placeholder.</value>
  </data>
  <data name="TextValidationSubFolder" xml:space="preserve">
    <value>It is required a non-empty subfolder name.</value>
  </data>
  <data name="TitleAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="TitleHowToUse" xml:space="preserve">
    <value>How to use</value>
  </data>
</root>